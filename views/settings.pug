doctype html
head
  meta(charset='UTF-8')
  link(rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css' integrity='sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm' crossorigin='anonymous')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  script(src='https://cdn.jsdelivr.net/npm/chart.js@2.8.0')
  link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.css')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.bundle.js')
  link(rel='shortcut icon' type='image/png' href='img/favicon.png')
  link(rel='stylesheet' href='../css/main.css')
  script(src="https://cdn.jsdelivr.net/npm/@jaames/iro@5")
  title Settings | #{project.name}
  link(rel="stylesheet", href="css/fa.css")
  script.
    const mode = localStorage.getItem('mode');

    if(mode === "Dark"){
      document.documentElement.setAttribute('data-theme', 'dark');
    } else {
      document.documentElement.setAttribute('data-theme', 'light');
    }
    
.control-menu
  img.control-logo(src='../img/grey-icon.png' alt='Vulture Grey Icon')
  .control-top
    div
      a(href="/projects")
        i.fa.fa-bookmark
  .control-bottom
    div
      a(href="/account")
        i.fa.fa-cog
.subset-menu
  .subset-proj-header
    .proj-img
    .proj-text
      .proj-text--title #{project.name}
      .proj-text--subtitle #{project.type}
    .proj-arrow
      .fas.fa-chevron-down
  hr.subset
  .below-sb-hr
    .proj-dropdown
      for proj in uprojects
        if proj.code != user.groupcode
          .proj-item
            .proj-img(style="background-image: url('../img/project2.png')")
            .proj-text
              .proj-text--title= proj.name
              .proj-text--subtitle= proj.type
              .proj-text--code= proj.code
    .subset-list
      a.subset-item(href="/overview")
        i.fa.fa-columns.fa-fw
        span.subset-item-text Board
      a.subset-item(href="/visual")
        i.fas.fa-chart-bar.fa-fw  
        span.subset-item-text Visual
      a.subset-item(href="/markers")
        i.fas.fa-poll-h.fa-fw
        span.subset-item-text Markers
      if user.role === 'Admin' || user.role === 'Manager'
        hr
        a.subset-item(href="/members")
          i.fas.fa-users.fa-fw
          span.subset-item-text Members

        .subset-item.subset-active
          i.fa.fa-cog.fa-fw
          span.subset-item-text Settings
      hr
      .subset-item#logout
        i.fa.fa-arrow-to-left.fa-fw
        span.subset-item-text Log Out
  .subset-profile
    .sp-left
      .sp-picture
    .sp-right
      .sp-name
        | #{user.name}
      - roleClass = 'role-text role-'+user.role
      .sp-role(class=roleClass)
        | #{user.role}
.main-body
  .board-header
    .board-title
      i.fad.fa-cog.fa-fw.grey-i.grey-p10
      |  Settings
      span.groupcode
        span.code
          span.grey-code Project Code
          | #{project.code}
  .sub-main-body
    .settings-container
        form.save-project
            label.form__label Project Name
            input.form__input.settings-name.ipt-m(minlength='1' required)
            label.form__label.label-shift Project Type
            select.select-type.settings-type#project-type.ipt-m(required='')
                option(selected disabled hidden) Select
                optgroup(label="Projects")
                    option(value="Software Project") Software Project
                    option(value="Mobile Project") Mobile Project
                    option(value="Game Project") Game Project
                    option(value="Desktop App Project") Desktop App Project
                optgroup(label="Development")
                    option(value="Web Development") Web Development
                    option(value="Enterprise Development") Enterprise Development
                    option(value="System Development") System Development
                    option(value="Embedded Development") Embedded Development
                optgroup(label="Other")
                    option(value="Client Management") Client Management 
                    option(value="Team") Team
                    option(value="Group") Group
                    option(value="Personal") Personal
                    option(value="Startup") Startup
                    option(value="Company") Company
            .sc-buttons
                if user.role === 'Manager'
                    .btn.btn-danger.del-project.fl-l(data-toggle="modal" data-target="#deleteModal") Delete Project
                button.btn.btn-primary.save-project-btn(type="submit") Save Changes

    
#deleteModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='deleteModal' aria-hidden='true')
  .modal-dialog.modal-dialog-centered(role='document')
    .modal-content
      .modal-header
        h5.card-modal-title.modal-title(contentEditable="true" spellcheck="false") Type 'CONFIRM' to delete your project.
        button.close(type='button' data-dismiss='modal' aria-label='Close')
          span(aria-hidden='true') &times;
      .modal-body.dm-body
        input.form__input.confirm-del.ipt-m(placeholder="CONFIRM" required)
        .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
            button.btn.btn-danger.del-proj(type='submit' disabled) Delete

#markersModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='markersModal' aria-hidden='true')
  .modal-dialog.modal-dialog-centered(role='document')
    .modal-content
      .modal-header
        h5#exampleModalLongTitle.modal-title
          i.fas.fa-poll-h.fa-fw
          | &nbsp;Markers
        button.close(type='button' data-dismiss='modal' aria-label='Close')
          span(aria-hidden='true') &times;
      .modal-body
        .marker-form-wrap
          for tag in project.tags
              .remove-item-container
                span.remove &times;
                .marker(style=`background-color: rgba(${tag.colour},0.2);color: rgb(${tag.colour})`)
                  .marker-circle(style=`background-color: rgb(${tag.colour})`)
                  .marker-content= tag.text
        hr.slim
        label.markerColor(for='markerColor')
          | Create Marker
          br
        form.form--newMarker
          .marker-options
            .marker-options-left
              input#markerPreviewInput.form__input.mt-0(type='text' required)
              br
              .mol-container
                #marker-preview.marker.no-grow(style=`background-color: rgba(70, 73, 160, 0.2);color: rgb(70, 73, 160)`)
                      #marker-preview-circle.marker-circle(style=`background-color: rgb(70, 73, 160)`)
                      #marker-preview-content.marker-content Preview
            .marker-options-right
              #marker-colour
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Close
            button.btn.btn-primary(type='submit') Save changes
script(src='http://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js' type='text/javascript')
script(src='js/bundle.js')
script(src='js/response.js')
script(src='https://code.jquery.com/jquery-3.2.1.slim.min.js' integrity='sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN' crossorigin='anonymous')
script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js' integrity='sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q' crossorigin='anonymous')
script(src='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js' integrity='sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl' crossorigin='anonymous')
script.
    document.querySelector('.settings-name').value = "#{project.name}";
    document.getElementById('project-type').value = "#{project.type}";
    const cd = document.querySelector('.confirm-del');
    const db = document.querySelector('.del-proj');
    cd.addEventListener('input', () => {
        if(cd.value === 'CONFIRM'){
            db.disabled = false;
        } else {
            db.disabled = true;
        }
    })
    $('#deleteModal').on('hidden.bs.modal', () => {
        cd.value = "";
        db.disabled = true;
    });

