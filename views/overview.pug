doctype html
head
  meta(charset='UTF-8')
  link(rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css' integrity='sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm' crossorigin='anonymous')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  link(rel='shortcut icon' type='image/png' href='img/favicon.png')
  link(rel='stylesheet' href='css/main.css')
  title Board | #{project.name}
  link(rel="stylesheet", href="css/fa.css")
  script(src="/socket.io/socket.io.js")
  script(src='js/socket.js')
  script(src="https://cdn.jsdelivr.net/npm/@jaames/iro@5")
  script.
    const mode = localStorage.getItem('mode');

    if(mode === "Dark"){
      document.documentElement.setAttribute('data-theme', 'dark');
    } else {
      document.documentElement.setAttribute('data-theme', 'light');
    }

    runSocket("#{user._id}")
    
.control-menu
  img.control-logo(src='img/grey-icon.png' alt='Vulture Grey Icon')
  .control-top
    div(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Projects</b>")
      a(href="/projects")
        i.fa.fa-bookmark
    div(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Chat</b>")
      a(href="/chat")
        i.fa.fa-comments-alt
  .control-bottom
    div(data-toggle="tooltip" data-html="true" data-placement="right" title="<b>Settings</b>")
      a(href="/account")
        i.fa.fa-cog
.subset-menu
  .subset-proj-header
    .proj-img
    .proj-text
      .proj-text--title #{project.name}
      .proj-text--subtitle #{project.type}
    .proj-arrow
      .fas.fa-chevron-down
  hr.subset
  .below-sb-hr
    .proj-dropdown
      for proj in uprojects
        if proj.code != user.groupcode
          .proj-item
            .proj-img(style="background-image: url('../img/project2.png')")
            .proj-text
              .proj-text--title= proj.name
              .proj-text--subtitle= proj.type
              .proj-text--code= proj.code
    .subset-list
      .subset-item.subset-active(href="/overview")
        i.fa.fa-columns.fa-fw
        span.subset-item-text Board
      a.subset-item(href="/visual")
        i.fa.fa-chart-bar.fa-fw  
        span.subset-item-text Visual
      a.subset-item(href="/markers")
        i.fa.fa-poll-h.fa-fw
        span.subset-item-text Markers
      //- .subset-item
      //-   i.fa.fa-comments-alt.fa-fw
      //-   span.subset-item-text Chat
      if user.role === 'Admin' || user.role === 'Manager'
        hr.subset
        a.subset-item(href="/members")
          i.fa.fa-users.fa-fw
          span.subset-item-text Members

        a.subset-item(href="/settings")
          i.fa.fa-cog.fa-fw
          span.subset-item-text Settings
    hr.subset
    .subset-item#logout
        i.fa.fa-arrow-to-left.fa-fw
        span.subset-item-text Log Out
  .subset-profile
    .sp-left
      .sp-picture
    .sp-right
      .sp-name
        | #{user.name}
      - roleClass = 'role-text role-'+user.role
      .sp-role(class=roleClass)
        | #{user.role}
.main-body
  .board-header
    .board-title
      i.fa.fa-columns.fa-fw.grey-i
      |  Board
      span.groupcode
        span.code
          span.grey-code Project Code
          | #{project.code}
  .board-boards
    - pinned=[]
    for card in project.cards
      if card.flags.includes('pin')
        - pinned.push(card)
    .panel.panel-1
      .panel-header
        .panel-header-text PENDING
        .panel-header-icon(onClick="modalUpdateOpen('Pending');" data-toggle="modal" data-target="#createTicketModal")
          .fa.fa-plus

      .panel-body(id="panel-1")
        - panelId = 0
        for card in project.cards
          if card.panel === 'pending'
            - panelId += 1 
            .panel-item(draggable='true' type='button' data-toggle='modal' data-target='#cardModal')
              .panel-item-title= card.summary
              .panel-item-markers
                - tagCount = 0
                for tag in card.tags
                  - tagCount += 1
                  if tagCount === 1
                    - stringify = JSON.stringify(project.tags[tag])
                    if stringify != undefined
                      - newTag = JSON.parse(stringify)
                      .marker(style=`background-color: rgba(${newTag.colour},0.2);color: rgb(${newTag.colour})`)
                        .marker-circle(style=`background-color: rgb(${newTag.colour})`)
                        .marker-content= newTag.text
                if tagCount > 0 && tagCount-1 != 0
                  .marker.marker-additional= `+${tagCount-1}`
              .panel-item-urgency
                .urgency(class=card.urgency)
                .panel-item-id= card.id
              .panel-flag
                if card.flags.includes('global')
                  .flag.fad.fa-bullhorn(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Global</b>")
                if card.flags.includes('serious')
                  .flag.fad.fa-stopwatch(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Serious</b>")
                if card.flags.includes('bug')
                  .flag.fad.fa-bug(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Bug</b>")
                if card.flags.includes('pin')
                  .flag.fad.fa-thumbtack(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Pinned</b>")
  
    .panel.panel-2
      .panel-header
        .panel-header-text IN PROGRESS
        .panel-header-icon(onClick="modalUpdateOpen('In Progress');" data-toggle="modal" data-target="#createTicketModal")
          .fa.fa-plus

      .panel-body(id="panel-2")
        - panelId = 0
        for card in project.cards
          if card.panel === 'inprogress'
            - panelId += 1 
            .panel-item(draggable='true' type='button' data-toggle='modal' data-target='#cardModal')
              .panel-item-title= card.summary
              .panel-item-markers
                - tagCount = 0
                for tag in card.tags
                  - tagCount += 1
                  if tagCount === 1
                    - stringify = JSON.stringify(project.tags[tag])
                    if stringify != undefined
                      - newTag = JSON.parse(stringify)
                      .marker(style=`background-color: rgba(${newTag.colour},0.2);color: rgb(${newTag.colour})`)
                        .marker-circle(style=`background-color: rgb(${newTag.colour})`)
                        .marker-content= newTag.text
                if tagCount > 0 && tagCount-1 != 0
                  .marker.marker-additional= `+${tagCount-1}`
              .panel-item-urgency
                .urgency(class=card.urgency)
                .panel-item-id= card.id
              .panel-flag
                if card.flags.includes('global')
                  .flag.fad.fa-bullhorn(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Global</b>")
                if card.flags.includes('serious')
                  .flag.fad.fa-stopwatch(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Serious</b>")
                if card.flags.includes('bug')
                  .flag.fad.fa-bug(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Bug</b>")
                if card.flags.includes('pin')
                  .flag.fad.fa-thumbtack(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Pinned</b>")
    .panel.panel-3
      .panel-header
        .panel-header-text ISSUES
        .panel-header-icon(onClick="modalUpdateOpen('Issues');" data-toggle="modal" data-target="#createTicketModal")
          .fa.fa-plus

      .panel-body(id="panel-3")
        
        - panelId = 0
        for card in project.cards
          if card.panel === 'issues'
            - panelId += 1 
            .panel-item(draggable='true' type='button' data-toggle='modal' data-target='#cardModal')
              .panel-item-title= card.summary
              .panel-item-markers
                - tagCount = 0
                for tag in card.tags
                  - tagCount += 1
                  if tagCount === 1
                    - stringify = JSON.stringify(project.tags[tag])
                    if stringify != undefined
                      - newTag = JSON.parse(stringify)
                      .marker(style=`background-color: rgba(${newTag.colour},0.2);color: rgb(${newTag.colour})`)
                        .marker-circle(style=`background-color: rgb(${newTag.colour})`)
                        .marker-content= newTag.text
                if tagCount > 0 && tagCount-1 != 0
                  .marker.marker-additional= `+${tagCount-1}`
              .panel-item-urgency
                .urgency(class=card.urgency)
                .panel-item-id= card.id
              .panel-flag
                if card.flags.includes('global')
                  .flag.fad.fa-bullhorn(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Global</b>")
                if card.flags.includes('serious')
                  .flag.fad.fa-stopwatch(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Serious</b>")
                if card.flags.includes('bug')
                  .flag.fad.fa-bug(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Bug</b>")
                if card.flags.includes('pin')
                  .flag.fad.fa-thumbtack(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Pinned</b>")
    .panel.panel-4
      .panel-header
        .panel-header-text COMPLETED
        .panel-header-icon(onClick="modalUpdateOpen('Completed');" data-toggle="modal" data-target="#createTicketModal")
          .fa.fa-plus

      .panel-body(id="panel-4")
        - panelId = 0
        for card in project.cards
          if card.panel === 'completed'
            - panelId += 1 
            .panel-item(draggable='true' type='button' data-toggle='modal' data-target='#cardModal')
              .panel-item-title= card.summary
              .panel-item-markers
                - tagCount = 0
                for tag in card.tags
                  - tagCount += 1
                  if tagCount === 1
                    - stringify = JSON.stringify(project.tags[tag])
                    if stringify != undefined
                      - newTag = JSON.parse(stringify)
                      .marker(style=`background-color: rgba(${newTag.colour},0.2);color: rgb(${newTag.colour})`)
                        .marker-circle(style=`background-color: rgb(${newTag.colour})`)
                        .marker-content= newTag.text
                if tagCount > 0 && tagCount-1 != 0
                  .marker.marker-additional= `+${tagCount-1}`
              .panel-item-urgency
                .urgency(class=card.urgency)
                .panel-item-id= card.id
              .panel-flag
                if card.flags.includes('global')
                  .flag.fad.fa-bullhorn(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Global</b>")
                if card.flags.includes('serious')
                  .flag.fad.fa-stopwatch(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Serious</b>")
                if card.flags.includes('bug')
                  .flag.fad.fa-bug(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Bug</b>")
                if card.flags.includes('pin')
                  .flag.fad.fa-thumbtack(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Pinned</b>")
                .flag.fad.fa-check(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Completed</b>")
#createTicketModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='createTicketModalTitle' aria-hidden='true')
  .modal-dialog.modal-dialog-centered(role='document')
    .modal-content
      .modal-header
        h5.modal-title New Ticket
          .bcrumb.fad.fa-angle-right
          span.cTmodal-location
        button.close(type='button' data-dismiss='modal' aria-label='Close')
          span(aria-hidden='true') &times;
      .modal-body
        form.form--newTicket
          .form__group
            label.form__label(for='summary')
              | Summary
              span.required *
            input#summary.form__input.ipt-m(placeholder='e.g. unhandled error when logging out' required maxlength="38")
          .form__group
            label.form__label(for='description') Description
            textarea#description.textarea.ipt-m
          .form__group
            .top-labels-modal
              label.form__label
                | Urgency
              span.required *
              label.form__label.label-right
                | Flags
            .lower-input-modal  
              .form-urgency
                .urgency.urgency-tmodal.high
                select.select.select-urgency-ticket(id="urgency")
                  option(value="critical") Critical
                  option(value="high" selected) High
                  option(value="medium") Medium
                  option(value="low") Low
              .flag-items
                .flag-item#global(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Flag as Global</b>")
                  .flag.fad.fa-bullhorn
                .flag-item#serious(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Flag as Serious</b>")
                  .flag.fad.fa-stopwatch
                .flag-item#bug(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Flag as a Bug</b>")
                  .flag.fad.fa-bug
                .flag-item#pin(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Pin Ticket</b>")
                  .flag.fad.fa-thumbtack
          .form__group
            label.form__label Markers
            br
            .marker-wrap.marker-tcm
              for tag in project.tags
                  .marker.marker-tcard(style=`background-color: rgba(${tag.colour},0.2);color: rgb(${tag.colour})` id=`${tag.text}`)
                    .marker-circle(style=`background-color: rgb(${tag.colour})`)
                    .marker-content.tag-label-content= tag.text
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Close
            button.btn.btn-primary.open-ticket-btn(type='submit') Open ticket
#markersModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='markersModal' aria-hidden='true')
  .modal-dialog.modal-dialog-centered(role='document')
    .modal-content
      .modal-header
        h5.modal-title
          i.fas.fa-poll-h.fa-fw
          | &nbsp;Markers
        button.close(type='button' data-dismiss='modal' aria-label='Close')
          span(aria-hidden='true') &times;
      .modal-body
        .marker-wrap.marker-mmm
          for tag in project.tags
            .mm-m-wrap
              .edit-marker
                .far.fa-ellipsis-h
              .marker.m-no-r(style=`background-color: rgba(${tag.colour},0.2);color: rgb(${tag.colour})` id=`${tag.text}`)
                .marker-circle(style=`background-color: rgb(${tag.colour})`)
                .marker-content.tag-label-content= tag.text
              
        .marker-spacing
        label.markerColor(for='markerColor')
          | Create Marker
          br
        form.form--newMarker
          .marker-options
            .marker-options-left
              input#markerPreviewInput.form__input.mt-0.ipt-m(type='text' required maxlength="20")
              br
              .mol-container
                #marker-preview.marker.no-grow(style=`background-color: rgba(70, 73, 160, 0.2);color: rgb(70, 73, 160)`)
                      #marker-preview-circle.marker-circle(style=`background-color: rgb(70, 73, 160)`)
                      #marker-preview-content.marker-content Preview
            .marker-options-right
              #marker-colour
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Close
            button.btn.btn-primary(type='submit') Save
#cardModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='cardModal' aria-hidden='true')
  .modal-dialog.modal-dialog-centered(role='document')
    .modal-content
      .modal-header
        .card-modal-id.dpn id
        h5.card-modal-title.modal-title(contentEditable="true" spellcheck="false" onpaste="return false;" onkeypress="return (this.textContent.length <= 38);") 
        button.close(type='button' data-dismiss='modal' aria-label='Close')
          span(aria-hidden='true') &times;
      .modal-body
        form.card-details
          .form__group
            label.form__label(for='desc') Description
            .marker-form-wrap.grey-bg.desc.ipt-m(contentEditable="true" id="desc")
          .form__group
            .top-labels-modal
              label.form__label
                | Urgency
              label.form__label.label-right
                | Flags
            .lower-input-modal  
              .form-urgency
                .urgency.urgency-modal.high
                select.select.select-urgency
                  option(value="critical") Critical
                  option(value="high" selected) High
                  option(value="medium") Medium
                  option(value="low") Low
              .flag-items
                .flag-item-c#global(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Flag as Global</b>")
                  .flag.fad.fa-bullhorn
                .flag-item-c#serious(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Flag as Serious</b>")
                  .flag.fad.fa-stopwatch
                .flag-item-c#bug(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Flag as a Bug</b>")
                  .flag.fad.fa-bug
                .flag-item-c#pin(data-toggle="tooltip" data-html="true" data-placement="bottom" title="<b>Pin Ticket</b>")
                  .flag.fad.fa-thumbtack
          .form__group
            label.form__label(for='urgency') Markers
            .marker-wrap.marker-cm
          .modal-footer
            button.btn.btn-danger.del-card.fl-l(type='button' data-dismiss='modal') Delete
            button.btn.btn-secondary(type='button' data-dismiss='modal') Close
            button.btn.btn-primary.card-form-btn(type='submit') Save

  
script(src='http://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js' type='text/javascript')
script(src='js/response.js')
script(src='js/bundle.js')
script(src='https://code.jquery.com/jquery-3.2.1.slim.min.js' integrity='sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN' crossorigin='anonymous')
script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js' integrity='sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q' crossorigin='anonymous')
script(src='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js' integrity='sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl' crossorigin='anonymous')
script.
  $(document).ready(function() {
    $("body").tooltip({ selector: '[data-toggle=tooltip]' });
  });

  let icons = {
      "critical": '<i class="fas fa-angle-double-up"></i>',
      "high": '<i class="fas fa-angle-up"></i>',
      "medium": '<i class="fas fa-equals"></i>',
      "low": '<i class="fas fa-minus"></i>'
  };
  const panels = document.querySelectorAll('.panel-item');
  const cardModalId = document.querySelector('.card-modal-id');
  const cmTitle = document.querySelector('.card-modal-title')
  const desc = document.querySelector('.desc');
  var cards = JSON.parse("#{cards}".replace(/&quot;/g,'"'));
  const uMod = document.querySelector('.urgency-modal');
  const s = document.querySelector('.select-urgency');
  const mCM = document.querySelector('.marker-cm');
  var tags = JSON.parse("#{tags}".replace(/&quot;/g,'"'));
  const snt = document.querySelector('.select-urgency-ticket');
  const uTMod = document.querySelector('.urgency-tmodal');



  const setFlags = (id) => {
    for(const card in cards){
      if(cards[card].id === id){
        const c = cards[card];

        var el =  document.querySelector('.flag-item-c#global');

        if(c.flags.includes('global')){
          const el =  document.querySelector('.flag-item-c#global');
          if(!el.classList.contains('flag-item-c-active')){
            el.classList.toggle('flag-item-c-active');
          }
        } else {
          const el =  document.querySelector('.flag-item-c#global');
          if(el.classList.contains('flag-item-c-active')){
            el.classList.toggle('flag-item-c-active');
          }
        }
        el =  document.querySelector('.flag-item-c#serious');
        if(c.flags.includes('serious')){
          const el =  document.querySelector('.flag-item-c#serious');
          if(!el.classList.contains('flag-item-c-active')){
            el.classList.toggle('flag-item-c-active');
          }
        } else {
          const el =  document.querySelector('.flag-item-c#serious');
          if(el.classList.contains('flag-item-c-active')){
            el.classList.toggle('flag-item-c-active');
          }
        }
        el =  document.querySelector('.flag-item-c#bug');
        if(c.flags.includes('bug')){
          if(!el.classList.contains('flag-item-c-active')){
            el.classList.toggle('flag-item-c-active');
          }
        } else {
          if(el.classList.contains('flag-item-c-active')){
            el.classList.toggle('flag-item-c-active');
          }
        }
        el =  document.querySelector('.flag-item-c#pin');
        if(c.flags.includes('pin')){
          const el =  document.querySelector('.flag-item-c#pin');
          if(!el.classList.contains('flag-item-c-active')){
            el.classList.toggle('flag-item-c-active');
          }
        } else {
          const el =  document.querySelector('.flag-item-c#pin');
          if(el.classList.contains('flag-item-c-active')){
            el.classList.toggle('flag-item-c-active');
          }
        }
      }
    }
  }

  const setMs = (id) => {
    for(const card in cards){
      if(cards[card].id === id){
        for(const tag in tags){
          let m = document.createElement('div')
          let c = '';
          if(cards[card].tags.includes(tags[tag].text)){
            c = 'mc-active';
          }
          m.innerHTML = `
            <div class="marker marker-card ${c}" id="${tags[tag].text}" style='background-color: rgba(${tags[tag].colour},0.2);color: rgb(${tags[tag].colour})'>
              <div class="marker-circle" style='background-color: rgb(${tags[tag].colour})'></div>
              <div class="marker-content tag-label-content">${tags[tag].text}</div>
            </div>
          `
          mCM.appendChild(m);
        }
      }
    }
  }

  const tmcs = document.querySelectorAll('.marker-tcard');
  tmcs.forEach(mc => {
      mc.addEventListener('click', () => {
          mc.classList.toggle('tmc-active');
      })
  })

  const setUrg = (id) => {
    for(const card in cards){
        if(cards[card].id === id){
          cmTitle.textContent = cards[card].summary;
          desc.innerHTML = cards[card].description.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&nbsp;/g, '').replace(/&amp;/g, '&').replace('style=""', '');
          uMod.classList = `urgency urgency-modal ${cards[card].urgency}`;
          uMod.innerHTML = icons[cards[card].urgency];
          document.querySelector(`.select-urgency [value="${cards[card].urgency}"]`).selected = true;
        }
      }
  }

  panels.forEach(panel => {
    panel.addEventListener('click', () => {
      var id = panel.childNodes[2].childNodes[1].textContent;
      cardModalId.textContent = id;
      mCM.innerHTML = '';
      setUrg(id);
      setMs(id);
      const mcs = document.querySelectorAll('.marker-card');
      mcs.forEach(mc => {
          mc.addEventListener('click', () => {
            mc.classList.toggle('mc-active');
          })
      })
      setFlags(id);
    })
  })

  s.addEventListener('change', () => {
    const u = s.value;
    uMod.classList = `urgency urgency-modal ${u.toLowerCase()}`;
    uMod.innerHTML = icons[u];
  });

  const setClickUrgency = () => {
    const u = snt.value;
    uTMod.innerHTML = icons[u];
  }

  setClickUrgency();

  snt.addEventListener('change', () => {
    const u = snt.value;
    uTMod.classList = `urgency urgency-tmodal ${u.toLowerCase()}`;
    uTMod.innerHTML = icons[u];
  });

