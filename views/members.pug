doctype html
head
  meta(charset='UTF-8')
  link(rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css' integrity='sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm' crossorigin='anonymous')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  script(src='https://cdn.jsdelivr.net/npm/chart.js@2.8.0')
  link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.css')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.bundle.js')
  link(rel='shortcut icon' type='image/png' href='img/favicon.png')
  link(rel='stylesheet' href='../css/main.css')
  script(src="https://cdn.jsdelivr.net/npm/@jaames/iro@5")
  title Members | #{project.name}
  link(rel="stylesheet", href="css/fa.css")
  script.
    const mode = localStorage.getItem('mode');

    if(mode === "Dark"){
      document.documentElement.setAttribute('data-theme', 'dark');
    } else {
      document.documentElement.setAttribute('data-theme', 'light');
    }
    
.control-menu
  img.control-logo(src='../img/grey-icon.png' alt='Vulture Grey Icon')
  .control-top
    div
      a(href="/projects")
        i.fa.fa-bookmark
  .control-bottom
    div
      a(href="/account")
        i.fa.fa-cog
.subset-menu
  .subset-proj-header
    .proj-img
    .proj-text
      .proj-text--title #{project.name}
      .proj-text--subtitle #{project.type}
    .proj-arrow
      .fas.fa-chevron-down
  hr.subset
  .below-sb-hr
    .proj-dropdown
      for proj in uprojects
        if proj.code != user.groupcode
          .proj-item
            .proj-img(style="background-image: url('../img/project2.png')")
            .proj-text
              .proj-text--title= proj.name
              .proj-text--subtitle= proj.type
              .proj-text--code= proj.code
    .subset-list
      a.subset-item(href="/overview")
        i.fa.fa-columns.fa-fw
        span.subset-item-text Board
      a.subset-item(href="/visual")
        i.fas.fa-chart-bar.fa-fw  
        span.subset-item-text Visual
      a.subset-item(href="/markers")        
        i.fas.fa-poll-h.fa-fw
        span.subset-item-text Markers
      if user.role === 'Admin' || user.role === 'Manager'
        hr
        .subset-item.subset-active
          i.fas.fa-users.fa-fw
          span.subset-item-text Members

        a.subset-item(href="/settings")
          i.fa.fa-cog.fa-fw
          span.subset-item-text Settings
      hr
      .subset-item#logout
        i.fa.fa-arrow-to-left.fa-fw
        span.subset-item-text Log Out
  .subset-profile
    .sp-left
      .sp-picture
    .sp-right
      .sp-name
        | #{user.name}
      - roleClass = 'role-text role-'+user.role
      .sp-role(class=roleClass)
        | #{user.role}
.main-body
  .board-header
    .board-title
      i.fad.fa-users.fa-fw.grey-i
      |  Members
      span.groupcode
        span.code
          span.grey-code Project Code
          | #{project.code}
  .sub-main-body
    .members-container
      .members-table
        table.table
            tr
                th Name
                th Email
                th Permissions
                th Manage
            for manager in JSON.parse(managers)
                tr
                    td #{manager.name}
                    td #{manager.email}
                    td
                        span.perm-circle
                        if manager.email === user.email
                          select.select.perm-select.select-members(class=`${manager.email}` disabled)
                            option(selected='') Manager&nbsp;
                        else
                          select.select.perm-select.select-members(class=`${manager.email}`)
                              if perm === "Manager"
                                  option(selected='') Manager&nbsp;
                                  option Admin
                                  option Editor
                              if perm === "Admin"
                                  option(selected='') Manager&nbsp;
                                  option(disabled) Admin
                                  option(disabled) Editor
                    td
                        if perm === "Admin" && user.email != manager.email
                          span.r-d-btn.disabled-btn
                              i.fa.fa-times
                        if perm === "Manager" && user.email != manager.email
                          span.remove-btn(class=`${manager.email}`)
                              i.fa.fa-times
                        if user.email === manager.email
                          span.r-d-btn.disabled-btn
                              i.fa.fa-times

            for admin in JSON.parse(admins)
                tr
                    td #{admin.name}
                    td #{admin.email}
                    td
                        span.perm-circle
                        if admin.email === user.email
                          select.select.perm-select.select-members(class=`${admin.email}` disabled)
                            option Manager&nbsp;
                            option(selected='') Admin
                        else
                          select.select.perm-select.select-members(class=`${admin.email}`)
                              if perm === "Manager"
                                  option Manager&nbsp;
                                  option(selected='') Admin
                                  option Editor
                              if perm === "Admin"
                                  option(disabled) Manager&nbsp;
                                  option(selected='') Admin
                                  option Editor
                    td
                      if user.email != admin.email
                        span.remove-btn(class=`${admin.email}`)
                            i.fa.fa-times
                      if user.email === admin.email
                        span.r-d-btn.disabled-btn
                            i.fa.fa-times

            for editor in JSON.parse(editors)
                tr
                    td #{editor.name}
                    td #{editor.email}
                    td
                        span.perm-circle
                        select.select.perm-select.select-members(class=`${editor.email}`)
                            if perm === "Manager"
                                option Manager&nbsp;
                                option Admin
                                option(selected='') Editor
                            if perm === "Admin"
                                option(disabled) Manager&nbsp;
                                option Admin
                                option(selected='') Editor
                    td
                        span.remove-btn(class=`${editor.email}`)
                            i.fa.fa-times
#createTicketModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='createTicketModalTitle' aria-hidden='true')
  .modal-dialog.modal-dialog-centered(role='document')
    .modal-content
      .modal-header
        h5#exampleModalLongTitle.modal-title New Ticket
          .bcrumb.fas.fa-caret-right
          span.cTmodal-location
        button.close(type='button' data-dismiss='modal' aria-label='Close')
          span(aria-hidden='true') &times;
      .modal-body
        form.form--newTicket
          .form__group
            label.form__label(for='summary')
              | Summary
              span.required *
            input#summary.form__input(placeholder='e.g. unhandled error when logging out' required)
          .form__group
            label.form__label(for='description') Description
            textarea#description.textarea
          .form__group
            label.form__label
              | Urgency
              span.required *
            br
            .option-wrap
              .urgency-flex
                .urgency-text.critical
                  i.fas.fa-angle-double-up
                  | &nbsp;&nbsp;Critical
                .urgency-text.high
                  i.fas.fa-angle-up
                  | &nbsp;&nbsp;High
                .urgency-text.medium.ur-active
                  i.fas.fa-equals
                  | &nbsp;&nbsp;Medium
                .urgency-text.low
                  i.fas.fa-minus
                  | &nbsp;&nbsp;Low
          .form__group
            label.form__label Markers
            br
            .marker-form-wrap.tags-boxes-wrap
              for tag in project.tags
                .checkbox-separator
                  input.tag-input.no-input-animation(type='checkbox' name=`${tag.text}-tag` value=`${tag.text}`)
                  label.tag(for=`${tag.text}-tag`)
                    .marker(style=`background-color: rgba(${tag.colour},0.2);color: rgb(${tag.colour})`)
                      .marker-circle(style=`background-color: rgb(${tag.colour})`)
                      .marker-content.tag-label-content= tag.text
              
          
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Close
            button.btn.btn-primary(type='submit') Open ticket
#markersModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='markersModal' aria-hidden='true')
  .modal-dialog.modal-dialog-centered(role='document')
    .modal-content
      .modal-header
        h5#exampleModalLongTitle.modal-title
          i.fas.fa-poll-h.fa-fw
          | &nbsp;Markers
        button.close(type='button' data-dismiss='modal' aria-label='Close')
          span(aria-hidden='true') &times;
      .modal-body
        .marker-form-wrap
          for tag in project.tags
              .remove-item-container
                span.remove &times;
                .marker(style=`background-color: rgba(${tag.colour},0.2);color: rgb(${tag.colour})`)
                  .marker-circle(style=`background-color: rgb(${tag.colour})`)
                  .marker-content= tag.text
        hr.slim
        label.markerColor(for='markerColor')
          | Create Marker
          br
        form.form--newMarker
          .marker-options
            .marker-options-left
              input#markerPreviewInput.form__input.mt-0(type='text' required)
              br
              .mol-container
                #marker-preview.marker.no-grow(style=`background-color: rgba(70, 73, 160, 0.2);color: rgb(70, 73, 160)`)
                      #marker-preview-circle.marker-circle(style=`background-color: rgb(70, 73, 160)`)
                      #marker-preview-content.marker-content Preview
            .marker-options-right
              #marker-colour
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Close
            button.btn.btn-primary(type='submit') Save changes
script(src='http://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js' type='text/javascript')
script(src='js/bundle.js')
script(src='js/response.js')
script(src='https://code.jquery.com/jquery-3.2.1.slim.min.js' integrity='sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN' crossorigin='anonymous')
script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js' integrity='sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q' crossorigin='anonymous')
script(src='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js' integrity='sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl' crossorigin='anonymous')
